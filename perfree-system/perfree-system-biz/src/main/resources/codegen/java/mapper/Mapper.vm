package ${table.packageName}.mapper;

import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.perfree.commons.common.PageResult;
import com.perfree.commons.mapper.BaseMapperX;
import ${table.packageName}.controller.auth.${table.lowerFirstClassName}.vo.*;
import ${table.packageName}.model.${table.className};
import org.apache.commons.lang3.StringUtils;
import org.apache.ibatis.annotations.*;

import java.util.List;

#if(${table.primaryColumn})
    #set ($primaryJavaField = $table.primaryColumn.substring(0,1).toUpperCase() + ${table.primaryColumn.substring(1)})
#end


## 字段模板
#macro(listCondition)
#foreach ($column in $columnList)
    #if (${column.listQueryOperation})
        #set ($JavaField = $column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
        #if (${column.queryType} == "0")
            .eq(null != reqVO.get${JavaField}(), ${table.className}::get${JavaField}, reqVO.get${JavaField}())
        #end
        #if (${column.queryType} == "1")
            .ne(null != reqVO.get${JavaField}(), ${table.className}::get${JavaField}, reqVO.get${JavaField}())
        #end
        #if (${column.queryType} == "2")
            .gt(null != reqVO.get${JavaField}(), ${table.className}::get${JavaField}, reqVO.get${JavaField}())
        #end
        #if (${column.queryType} == "3")
            .ge(null != reqVO.get${JavaField}(), ${table.className}::get${JavaField}, reqVO.get${JavaField}())
        #end
        #if (${column.queryType} == "4")
            .lt(null != reqVO.get${JavaField}(), ${table.className}::get${JavaField}, reqVO.get${JavaField}())
        #end
        #if (${column.queryType} == "5")
            .le(null != reqVO.get${JavaField}(), ${table.className}::get${JavaField}, reqVO.get${JavaField}())
        #end
        #if (${column.queryType} == "6")
            .like(StringUtils.isNotBlank(reqVO.get${JavaField}()), ${table.className}::get${JavaField}, reqVO.get${JavaField}())
        #end
        #if (${column.queryType} == "7")
            .ge(reqVO.get${JavaField}() != null && reqVO.get${JavaField}().length != 0 && reqVO.get${JavaField}()[0] != null, ${table.className}::get${JavaField}, reqVO.get${JavaField}())
            .le(reqVO.get${JavaField}() != null && reqVO.get${JavaField}().length != 0 && reqVO.get${JavaField}()[1] != null, ${table.className}::get${JavaField}, reqVO.get${JavaField}())
        #end
    #end
#end
#end

/**
* @description ${table.comment}
* @author ${table.author}
*/
@Mapper
public interface ${table.className}Mapper extends BaseMapperX<${table.className}> {

    default PageResult<${table.className}> selectPage(${table.className}PageReqVO reqVO) {
        return selectPage(reqVO, new LambdaQueryWrapper<${table.className}>()
            #listCondition()
        );
    }
}